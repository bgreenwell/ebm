[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 ebm authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brandon Greenwell. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Greenwell B (2025). ebm: Package (Title Case). R package version 0.1.0.","code":"@Manual{,   title = {ebm: What the Package Does (Title Case)},   author = {Brandon Greenwell},   year = {2025},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"ebm","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"simple R wrapper around explainable boosting functionality interpret library Python. Currently, can install ebm package GitHub:","code":"# install.packages(\"remotes\") remotes::install_github(\"bgreenwell/ebm\")"},{"path":"/reference/ebm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ebm: What the Package Does (Title Case) — ebm-package","title":"ebm: What the Package Does (Title Case) — ebm-package","text":"(maybe one line). Continuation lines indented.","code":""},{"path":"/reference/ebm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ebm: What the Package Does (Title Case) — ebm-package","text":"Maintainer: Brandon Greenwell greenwell.brandon@gmail.com (ORCID)","code":""},{"path":"/reference/ebm.html","id":null,"dir":"Reference","previous_headings":"","what":"Explainable Boosting Machine (EBM) — ebm","title":"Explainable Boosting Machine (EBM) — ebm","text":"function R wrapper explainable boosting functions Python interpret library. trains Explainable Boosting Machine (EBM) model, tree-based, cyclic gradient boosting generalized additive model automatic interaction detection. EBMs often accurate state---art blackbox models remaining completely interpretable.","code":""},{"path":"/reference/ebm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explainable Boosting Machine (EBM) — ebm","text":"","code":"ebm(   formula,   data,   max_bins = 1024L,   max_interaction_bins = 64L,   interactions = 0.9,   exclude = NULL,   validation_size = 0.15,   outer_bags = 16L,   inner_bags = 0L,   learning_rate = 0.04,   greedy_ratio = 10,   cyclic_progress = FALSE,   smoothing_rounds = 500L,   interaction_smoothing_rounds = 100L,   max_rounds = 25000L,   early_stopping_rounds = 100L,   early_stopping_tolerance = 1e-05,   min_samples_leaf = 4L,   min_hessian = 0,   reg_alpha = 0,   reg_lambda = 0,   max_delta_step = 0,   gain_scale = 5,   min_cat_samples = 10L,   cat_smooth = 10,   missing = \"separate\",   max_leaves = 2L,   monotone_constraints = NULL,   objective = c(\"log_loss\", \"rmse\", \"poisson_deviance\",     \"tweedie_deviance:variance_power=1.5\", \"gamma_deviance\", \"pseudo_huber:delta=1.0\",     \"rmse_log\"),   n_jobs = -1L,   random_state = 42L,   ... )"},{"path":"/reference/ebm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explainable Boosting Machine (EBM) — ebm","text":"formula formula form y ~ x1 + x2 + .... data data frame containing variables model. max_bins Max number bins per feature main effects stage. Default 1024. max_interaction_bins Max number bins per feature interaction terms. Default 64. interactions Interaction terms included model. Default 0.9. Options : Integer (1 <= interactions): Count interactions automatically selected Percentage (interactions < 1.0): Determine integer count interactions multiplying number features percentage List numeric pairs: pairs contain indices features within additive term. addition pairs, interactions parameter accepts higher order interactions. also accepts univariate terms cause algorithm boost main terms time interactions. boosting mains time interactions, exclude parameter set \"mains\" currently max_bins needs equal max_interaction_bins. exclude Features terms excluded. Default NULL. validation_size Validation set size. Used early stopping boosting, needed create outer bags. Default 0.15. Options : Integer (1 <= validation_size): Count samples put validation sets. Percentage (validation_size < 1.0): Percentage data put validation sets. 0: Turns early stopping. Outer bags utility. Error bounds eliminated. outer_bags Number outer bags. Outer bags used generate error bounds help smoothing graphs. Default 16. inner_bags Number inner bags. Default 0. learning_rate Learning rate boosting. Default 0.04. greedy_ratio proportion greedy boosting steps relative cyclic boosting steps. value 0 disables greedy boosting, effectively turning . Default 10.0. cyclic_progress parameter specifies proportion boosting cycles actively contribute improving model’s performance. expressed logical numeric 0 1, default set TRUE (1.0), meaning 100% cycles expected make forward progress. forward progress achieved cycle, cycle wasted; instead, used update internal gain calculations related effective feature predicting target variable. Setting parameter value less 1.0 can useful preventing overfitting. Default FALSE. smoothing_rounds Number initial highly regularized rounds set basic shape main effect feature graphs. Default 500. interaction_smoothing_rounds Number initial highly regularized rounds set basic shape interaction effect feature graphs fitting. Default 100. max_rounds Total number boosting rounds n_terms boosting steps per round. Default 25000. early_stopping_rounds Number rounds improvement trigger early stopping. 0 turns early stopping boosting occur exactly max_rounds. Default 100. early_stopping_tolerance Tolerance dictates smallest delta required considered improvement prevents algorithm early stopping. early_stopping_tolerance expressed percentage early stopping metric. Negative values indicate individual models overfit stopping. EBMs bagged ensemble models. Setting early_stopping_tolerance zero (even negative), allows learning overfit individual models little, can improve accuracy ensemble whole. Overfitting individual models reduces bias model expense increasing variance (due overfitting) individual models. averaging models ensemble reduces variance without much change bias. Since goal find optimum bias-variance tradeoff ensemble models---individual models---small amount overfitting individual models can improve accuracy ensemble whole. Default 1e-05. min_samples_leaf Minimum number samples allowed leaves. Default 4. min_hessian Minimum hessian required consider potential split valid. Default 0.0. reg_alpha L1 regularization. Default 0.0. reg_lambda L2 regularization. Default 0.0. max_delta_step Used limit max output tree leaves. <=0.0 means constraint. Default 0.0. gain_scale Scale factor apply nominal categoricals. scale factor 1.0 cause algorithm focus nominal categoricals. Default 5.0. min_cat_samples Minimum number samples order treat category separately. lower threshold category combined categories low numbers samples. Default 10. cat_smooth Used categorical features. can reduce effect noises categorical features, especially categories limited data. Default 10.0. missing Method handling missing values boosting. Default \"separate\". placement missing value bin can influence resulting model graphs. example, placing bin “low” side may cause missing values affect lower bins, vice versa. parameter affect final placement missing bin model (missing bin remain index 0 term_scores_ attribute). Possible values missing : \"low\": Place missing bin left side graphs. \"high\": Place missing bin right side graphs. \"separate\": Place missing bin leaf boosting step, effectively making location-agnostic. can lead overfitting, especially proportion missing values small. \"gain\": Choose best leaf missing value contribution boosting step, based gain. max_leaves Maximum number leaves allowed tree. Default 2. monotone_constraints Default NULL. parameter allows specify monotonic constraints feature's relationship target variable model fitting. However, generally recommended apply monotonic constraints post-fit using monotonize() attribute rather setting fitting process. recommendation based observation , fitting, boosting algorithm may compensate monotone constraint one feature utilizing another correlated feature, potentially obscuring monotonic violations. choose define monotone constraints, monotone_constraints numeric vector length equal number features. element list corresponds feature take one following values: 0: monotonic constraint imposed corresponding feature’s partial response. +1: partial response corresponding feature monotonically increasing respect target. -1: partial response corresponding feature monotonically decreasing respect target. objective objective function optimize. Default \"log_loss\" classification \"rmse\" regression. n_jobs Number jobs run parallel. Default -1. Negative integers interpreted following joblib's formula (n_cpus + 1 + n_jobs), just like scikit-learn. example, n_jobs = -2 means using threads except 1. random_state Random state. Setting NULL generates non-repeatable sequences. ... Additional optional argument. (Currently ignored.)","code":""},{"path":"/reference/ebm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explainable Boosting Machine (EBM) — ebm","text":"trained EBM model.","code":""},{"path":"/reference/ebm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explainable Boosting Machine (EBM) — ebm","text":"","code":"if (FALSE) {   data(\"Hitters\", package = \"ISLR2\")    # Remove rows with missing response values   hitters <- Hitters[!is.na(Hitters$Salary), ]    # Fit a default EBM regressor   fit <- ebm(Salary ~ ., data = hitters, objective = \"rmse\")    # Generate some predictions   head(predict(fit, newdata = hitters))   head(predict(fit, newdata = hitters, se.fit = TRUE))    # Show global summary and GAM shape functions   plot(fit)   plot(fit, term = \"Years\")   plot(fit, display = \"url\")  # can paste the resulting URL in the browser    # Understand an individual prediction   x <- subset(hitters, select = -Salary)[1L, ]  # use first observation   ebm_show(fit, local = TRUE, X = x, y = hitters$Salary[1L]) }"},{"path":"/reference/geom_stepribbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Step ribbons and area plots — geom_stepribbon","title":"Step ribbons and area plots — geom_stepribbon","text":"combination geom_ribbon() geom_step().","code":""},{"path":"/reference/geom_stepribbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step ribbons and area plots — geom_stepribbon","text":"","code":"geom_stepribbon(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/geom_stepribbon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Step ribbons and area plots — geom_stepribbon","text":"Taken ldatools.","code":""},{"path":"/reference/geom_stepribbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step ribbons and area plots — geom_stepribbon","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat.","code":""},{"path":"/reference/plot.EBM.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret plots for fitted EBM objects — plot.EBM","title":"Interpret plots for fitted EBM objects — plot.EBM","text":"Provides interactive visualization given explanation(s).","code":""},{"path":"/reference/plot.EBM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret plots for fitted EBM objects — plot.EBM","text":"","code":"# S3 method for EBM plot(   x,   term = NULL,   local = FALSE,   X = NULL,   y = NULL,   init_score = NULL,   interactive = FALSE,   geom = c(\"point\", \"col\"),   mapping = NULL,   aesthetics = list(),   horizontal = FALSE,   uncertainty = TRUE,   width = 0.5,   alpha = 0.5,   fill = \"grey\",   display = c(\"viewer\", \"markdown\", \"url\"),   viewer = c(\"browser\", \"rstudio\"),   full_dashboard = FALSE,   ... )"},{"path":"/reference/plot.EBM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret plots for fitted EBM objects — plot.EBM","text":"x EBMClassifier EBMRegressor object. term Character string specifying term plot. interaction effect, can supply pair (e.g., term = c(\"x1\", \"x2\")). Default NULL just display overall importance term. local Logocial indicating whether display local explanations (TRUE) global explanations (FALSE). Default FALSE. X Data frame matrix samples. Unless display = \"url\" full_dashboard = TRUE, X can contain single row. y Optional vector response values corresponding X. init_score Optional. Either model can generate scores per-sample initialization score. samples scores length X. interactive Logical indicating whether produce interactive plot based HTML. Default FALSE. (type = \"static\") interactive plot (type = \"plotly\") geom Character string specifying type plot construct terms associated categorical features. Current options : geom = \"col\" uses geom_col construct bar chart scores. geom = \"point\" uses geom_point construct Cleveland dot plot term scores. Default \"point\". mapping Set aesthetic mappings created aes-related functions /tidy eval helpers. See example usage . aesthetics List specifying additional arguments passed layer. often aesthetics, used set aesthetic fixed value, likecolour = \"red\" size = 3. See example usage . horizontal Logical indicating whether term plots categorical features flipped horzintally. Default FALSE. uncertainty Logical indicating whether also display uncertainty via error bars main effect plots. Default TRUE. useful unless outer_bags > 1 calling ebm(). width Numeric specifying width error bars displayed bar/ dot plots categorical features. Default 0.5. alpha Numeric 0 1 specifying level transparency use displaying uncertainty plots continuous features. Default 0.5. fill Character string specifying fill color use displaying uncertainty plots continuous features. Default \"grey\". display Character string specifying results displayed whenever interactive = TRUE. Available options \"viewer\" (e.g., RStudio viewer browser), \"markdown\" (e.g., vingettes, Quarto, Rmarkdown documents), \"url\" (e.g., print URL can pasted browser). display = \"url\", URL viewing entire interpret dashboard provided (.e., term full_dashboard arguments ignored). viewer Character string specifying results viewed. Current choices \"broswer\", calls utils::browseURL() display results HTML browser, \"rstudio\" displaying results within Viewer pane active RStudio session. Also works VS Code. Default \"browser\". full_dashboard Logical indicating whether display full interpret dashboard. Default FALSE. works display = \"viewer\" display = \"url\" (e.g., paste resulting URL browser). ... Additional optional arguments. Currently passed onto levelplot() heatmaps interaction effects.","code":""},{"path":"/reference/predict.EBM.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for EBM objects — predict.EBM","title":"Predict method for EBM objects — predict.EBM","text":"Compute predicted values fitted explainable boosting machine.","code":""},{"path":"/reference/predict.EBM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for EBM objects — predict.EBM","text":"","code":"# S3 method for EBM predict(   object,   newdata,   type = c(\"response\", \"link\", \"class\"),   se.fit = FALSE,   init_score = NULL,   ... )"},{"path":"/reference/predict.EBM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for EBM objects — predict.EBM","text":"object fitted ebm object. newdata data frame look variables predict. type type prediction required. se.fit Logical indicating whether standard errors required. init_score Optional. Either model can generate scores per-sample initialization score. samples scores length newdata. ... Additional optional arguments. (Currently ignored.)","code":""}]
